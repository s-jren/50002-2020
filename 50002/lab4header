// paren matcher

//checkoff "6004.csail.mit.edu/currentsemester/6004assignment.doit" "Lab #4" 1103641864
//checkoff "192.168.2.16:8000/checkoff/50002assignment.doit" "Lab #4" 1103641864
//checkoff "10.1.3.25/checkoff/50002assignment.doit" "Lab #4" 1103641864
checkoff "dsl1.sutd.edu.sg/checkoff/50002assignment.doit" "Lab #4" 1103641864

symbols ( ) 0 1 

tape test1 (
result1 test1 0

tape test2 )
result1 test2 0

tape test3 ( )
result1 test3 1

tape test4 ) (
result1 test4 0

tape test5 ( ) ( ) ( ( ( ) ) ( ) ) ) ( )
result1 test5 0

tape test6 ( ) ( ( ( ) ( ( ( ) ) ( ) ) )
result1 test6 0

tape test7 ( ) ( ( ) ( ( ( ) ) ( ) ) )
result1 test7 1

// define additional symbols, your states and actions here

// with additional symbols
symbols ( ) 0 1 2 3 4 5
states A B

// specify transistions: action state symbol state' write move
//    state = the current state of the FSM
//    symbol = the symbol read from the current cell
//    state' = state on the next cycle 
//    write = symbol to be written into the current cell
//    move = tape movement ("l" = left, "r" = right, "-"=stay put)
//     old  R     new       W  M
action  A   (      B        3  l
action  A   )      *halt*   0  -
action  A   3      A        -  l
action  A   5      A        -  l
action  A   -      *halt*   1  -
action  A   2      A        (  r
action  A   4      A        -  r

action  B   -      *halt*   0  -
action  B   )      A        5  r
action  B   (      B        2  l
action  B   5      B        4  l
action  B   4      B        4  l

